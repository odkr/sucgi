/*
 * Limits.
 *
 * DO NOT EDIT THIS FILE! Your changes may get overwritten. You can override
 * each limit by defining a macro of the same name in config.h.
 *
 * Copyright 2022 and 2023 Odin Kroeger.
 *
 * This file is part of suCGI.
 *
 * suCGI is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option)
 * any later version.
 *
 * suCGI is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with suCGI. If not, see <https://www.gnu.org/licenses>.
 */

#if !defined(MAX_H)
#define MAX_H

#include <limits.h>


/*
 * Maximum length for strings, including the NUL-terminator. Unsigned integer.
 * Upper limit for all other character limits.
 */
#if !defined(MAX_STR_LEN)
#define MAX_STR_LEN 8192U
#endif

/*
 * Maximum length for error message formats and error messages,
 * including the NUL-terminator. Unsigned integer.
 */
#if !defined(MAX_ERRMSG_LEN)
#define MAX_ERRMSG_LEN 256U
#endif

/*
 * Maximum length for filenames, including the NUL-terminator.
 * Unsigned integer. Longer filenames are rejected.
 */
#if !defined(MAX_FNAME_LEN)
#if defined(PATH_MAX) && PATH_MAX > -1
#if PATH_MAX < MAX_STR_LEN
#define MAX_FNAME_LEN PATH_MAX
#else /* PATH_MAX >= MAX_STR_LEN */
#define MAX_FNAME_LEN MAX_STR_LEN
#endif /* PATH_MAX < MAX_STR_LEN */
#else /* ! ||  < 0 */
#define MAX_FNAME_LEN 1024
#endif /* defined() &&  > -1 */
#endif /* !defined(MAX_FNAME_LEN) */

/*
 * Maximum length for group names, including the NUL-terminator.
 * Unsigned integer. Sets the maximum length for ALLOW_GROUP.
 */
#if !defined(MAX_GRPNAME_LEN)
#if defined(LOGIN_NAME_MAX) && LOGIN_NAME_MAX > -1
#if LOGIN_NAME_MAX < MAX_STR_LEN
#define MAX_GRPNAME_LEN LOGIN_NAME_MAX
#else /* LOGIN_NAME_MAX >= MAX_STR_LEN */
#define MAX_GRPNAME_LEN MAX_STR_LEN
#endif /* LOGIN_NAME_MAX < MAX_STR_LEN */
#else /* ! ||  < 0 */
#define MAX_GRPNAME_LEN 48U
#endif /* defined() &&  > -1 */
#endif /* !defined(MAX_GRPNAME_LEN) */

/*
 * Maximum length for filename suffices, including the NUL-terminator.
 * Unsigned integer. Filenames with longer suffices are rejected.
 */
#if !defined(MAX_SUFFIX_LEN)
#define MAX_SUFFIX_LEN 8U
#endif

/*
 * Maximum length for environment variables, including the NUL-terminator.
 * Unsigned integer. Longer variables are ignored.
 */
#if !defined(MAX_VAR_LEN)
#define MAX_VAR_LEN MAX_FNAME_LEN
#endif

/*
 * Maximum length for environment variable names, including the NUL-terminator.
 * Unsigned integer. Variables with longer names are ignored.
 */
#if !defined(MAX_VARNAME_LEN)
#define MAX_VARNAME_LEN 32U
#endif

/*
 * Maximum number of groups a user may be a member of. Unsigned integer.
 * Users who are members of more groups are rejected.
 */
#if !defined(MAX_NGROUPS)
#define MAX_NGROUPS 128U
#endif

/*
 * Maximum number of environment variables. Unsigned integer.
 * If the environment contains more variables, a run-time error is raised.
 */
#if !defined(MAX_NVARS)
#define MAX_NVARS 512U
#endif


/*
 * Checks
 */

#if MAX_STR_LEN < 1
#error MAX_STR_LEN is non-positive.
#endif

#if MAX_STR_LEN > SHRT_MAX
#error MAX_STR_LEN is greater than SHRT_MAX.
#endif

#if MAX_ERRMSG_LEN > MAX_STR_LEN
#error MAX_ERRMSG_LEN is greater than MAX_STR_LEN.
#endif

#if MAX_ERRMSG_LEN < 1
#error MAX_ERRMSG_LEN is non-positive.
#endif

#if MAX_FNAME_LEN > MAX_STR_LEN
#error MAX_FNAME_LEN is greater than MAX_STR_LEN.
#endif

#if MAX_FNAME_LEN < 1
#error MAX_FNAME_LEN is non-positive.
#endif

#if MAX_GRPNAME_LEN > MAX_STR_LEN
#error MAX_GRPNAME_LEN is greater than MAX_STR_LEN.
#endif

#if MAX_GRPNAME_LEN < 1
#error MAX_GRPNAME_LEN is non-positive.
#endif

#if MAX_SUFFIX_LEN > MAX_STR_LEN
#error MAX_SUFFIX_LEN is greater than MAX_STR_LEN.
#endif

#if MAX_SUFFIX_LEN < 1
#error MAX_SUFFIX_LEN is non-positive.
#endif

#if MAX_VAR_LEN > MAX_STR_LEN
#error MAX_VAR_LEN is greater than MAX_STR_LEN.
#endif

#if MAX_VAR_LEN < 1
#error MAX_VAR_LEN is non-positive.
#endif

#if MAX_VARNAME_LEN > MAX_STR_LEN
#error MAX_VARNAME_LEN is greater than MAX_STR_LEN.
#endif

#if MAX_VARNAME_LEN < 1
#error MAX_VARNAME_LEN is non-positive.
#endif

#if MAX_NGROUPS > INT_MAX
#error MAX_NGROUPS is greater than INT_MAX.
#endif

#if MAX_NGROUPS < 1
#error MAX_NGROUPS is non-positive.
#endif

#if MAX_NVARS > SHRT_MAX
#error MAX_NVARS is greater than SHRT_MAX.
#endif

#if MAX_NVARS < 1
#error MAX_NVARS is non-positive.
#endif

#endif /* !defined(MAX_H) */
