==============
Building suCGI
==============

Configuration
=============

Use *configure* to generate the *makefile*.

If you want to adapt suCGI's build settings, edit *prod.env* and create
a build configuration by calling ``configure``; supply ``-f`` to overwrite
existing files (e.g., ``CC=/opt/obscure/bin/occ ./configure -f``).

*configure* also respects the following environment variables:

CC
    The C compiler.

CFLAGS
    Flags to give to the compiler.

cov_cc
    The C compiler to create coverage reports with
    (defaults to ``$(CC)``).

If *configure* fails, you can also create the *makefile* by::

	m4 makefile.m4 >makefile


Development
===========

suCGI's default build configuration resides in *devel.env*;
load it by passing ``-d`` to *configure*.

*devel.env* loads *local.env* if it exists.
Here is an example for *local.env*::

	# Use GCC v12 by default.
	: "${CC:="gcc-12"}"

	# Disable GCC-related warnings when building with Clang.
	[ "${CC-}" = clang ] && add_cflags -Wno-unused-command-line-argument

	# Overwrite existing files.
	force=x

	# Use Clang for coverage reports
	cov_cc=clang

*configure*'s configuration files are simply shell scripts.
Have a look at *configure*, *prod.env*, and *devel.env* for more details.


Compilation
===========

Compile suCGI by calling ``make``.

Makefile variables
------------------

You can pass the following variables to ``make`` to configure compilation:

CC
    The C compiler
    (default is generated by ``configure``).

CFLAGS
    Flags to give to the C compiler
    (default is generated by ``configure``).

ARFLAGS
    Flags to give to the archiver
    (default depends on *make*).

LDFLAGS
    Flags to give to the compiler when it invokes the linker
    (default depends on *make*).

LDLIBS
    Flags or names to give to the compiler when it invokes the linker
    (default depends on *make*).

cov_cc
    The C compiler to create coverage reports with
    (defaults to ``$(CC)``).

Macros
------

You can set the following macros to configure to change suCGI's behaviour.

MAX_ENV
    How many environment variables suCGI may accept. Unsigned integer.
    suCGI aborts if the environment contains more variables. Defaults to 256.

MAX_GROUPS
    How many groups a user can be a member of. Unsigned interger.
    suCGI refuses users who belong to more groups. Defaults to 32.

MAX_STR
    Maximum string size, including the terminating NUL.
    suCGI aborts if encounters a string that is longer.
    Defaults to 1024 or PATH_MAX, whichever is lower.

TESTING
    Whether to build for testing. Boolean value.
    *Test builds are insecure!*

MAX_ENV, MAX_GROUPS, and MAX_STR cannot be set in *config.h*;
TESTING should not be set in *config.h*.


Installation
============

Install suCGI by ``make install``.

You can pass the following variables to ``make`` to adapt the installation:

DESTDIR
    Prefix for staged installations
    (default depends on *make*).

PREFIX
    Prefix for installation targets
    (defaults to */usr/local*).

cgi_dir
    Path to your webserver's */cgi-bin* directory
    (defaults to */usr/lib/cgi-bin*).

www_grp
    Group the webserver runs as
    (defaults to "www-data").


Other targets
=============

The *makefile* supports the following 'phony' targets:

all
    Alias for "sucgi" and the default target.

analysis
    Analyse the code with Cppcheck_, Flawfinder_, RATS_, and
    ShellCheck_, if they are installed.

check
    Perform tests. Must be run as superuser to perform all tests.

cov
    Generate coverage data.
    Must be run as superuser to generate a complete report.
    Only tested with Clang_.

covhtml
    Generate a coverage report. Alias for "cov/index.html". Requires LCOV_.

clean
    Delete binaries, coverage data, temporary files, and distribution files.

dist
    Make a distribution package. Requires *tar* and GnuPG_.

distcheck
    Check if the distribution compiles,
    passes the test suite, and is self-contained.

distclean
    Delete *config.h*, *makefile* and everything ``make clean`` deletes.

install
    Install suCGI.

uninstall
    Uninstall suCGI.


.. _Clang: https://clang.llvm.org/

.. _Cppcheck: https://cppcheck.sourceforge.io/

.. _Flawfinder: https://dwheeler.com/flawfinder/

.. _RATS: https://github.com/andrew-d/rough-auditing-tool-for-security

.. _ShellCheck: https://www.shellcheck.net/

.. _LCOV: https://github.com/linux-test-project/lcov

.. _GnuPG: https://www.gnupg.org/
