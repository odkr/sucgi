# suCGI build configuration for development.
# See docs/BUILDING.rst for details.
#
# Use "add_cflags FLAG [FLAG [...]]" to add other compiler flags.
# Use "add_macros NAME[=VALUE] [NAME[=VALUE] [...]]" to add "-DNAME[=VALUE]".

# Enforce __attribute__((nonnull(...))).
add_cflags -Wnonnull -fisolate-erroneous-paths-attribute \
           -fno-delete-null-pointer-checks

# Fail on integer overflow.
add_cflags -ftrapv

# Enable link time optimisation.
# Required for -fsanitize=cfi by clang, but a good idea at any rate.
add_cflags -flto

# Enable control flow protection.
add_cflags -fcf-protection=full -fsanitize=cfi

# Enable the stack protector.
add_cflags -fstack-protector -fsanitize=safe-stack

# Protect against stack clashing attacks.
add_cflags -fstack-clash-protection

# Check for (some) undefined behaviour.
add_cflags -fsanitize=undefined

# Enable most warnings.
add_cflags -pedantic-errors -Wall -Wextra -Wpedantic

# Enable some of the warnings not covered by -Wall, -Wextra, and -Wpedantic.
add_cflags -Wcast-align=strict -Wconversion \
           -Wformat=2 -Wformat-overflow=2 -Wformat-signedness \
           -Wimplicit-fallthrough=3 -Wlogical-op \
	   -Wnull-dereference -Wparentheses \
	   -Wshadow -Wundef -Wuninitialized

# Optimise the build. Required for instrumentation.
add_cflags -O2

# Load local settings.
if [ -e local.env ]
then
	. local.env
fi

