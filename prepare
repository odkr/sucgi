#!/bin/sh
# shellcheck disable=1091,2015

#
# Initialisation
#

set -Ceu
src_dir="$(dirname "$0")" || exit
readonly src_dir
cd "$src_dir" || exit
. ./scripts/funcs.sh || exit
init


#
# Functions
#

hasall() (
	for cmd
	do command -v "$cmd" >/dev/null || return
	done
	return 0
)

hasany() (
	for cmd
	do command -v "$cmd" >/dev/null && return
	done
	return 1
)


#
# Options
#

OPTIND=1 OPTARG='' opt=''
while getopts h opt; do
	case $opt in
	(h) exec cat <<EOF ;;
prepare - Install the C build toolchain.

Usage:       prepare
             prepare -h

Options:
    -h       Show this help screen.

Copyright 2023 Odin Kroeger.
Released under the GNU General Public License.
This programme comes with ABSOLUTELY NO WARRANTY.
EOF
	(*) exit 1
	esac
done
shift $((OPTIND - 1))
unset opt

if [ $# -gt 0 ]
then
	printf 'usage: prepare\n' >&2
	exit 2
fi


#
# Main
#

hascomp='' hashdrs=''
for cc in cc c99 gcc clang tcc
do
	if command -v "$cc" >/dev/null
	then
		hascomp=y

		find * -name '*.c' -o -name '*.h'	|
		xargs sed -n '/^#include </p' 		|
		sort -u					|
		"$cc" -xc -E - >/dev/null 2>&1		&&
		hashdrs=y

		break
	fi
done

missing=
[ "$hascomp" ]			|| missing="$missing gcc"
hasall ar as ld			|| missing="$missing binutils"
hasany make gmake pmake	bsdmake	|| missing="$missing make"
hasany m4			|| missing="$missing m4"

if ! [ "$missing" ] && [ "$hashdrs" ]
then err -s0 'complete toolchain available; nothing to do.'
fi

os="$(uname)"

case $os in
(Darwin)
	exec xcode-select --install
	;;
(Linux)
	if	[ -e /etc/alpine-release ]
	then
		[ "$hashdrs" ] || missing="$missing libc-dev fortify-headers"
		exec apk add $missing
	elif	[ -e /etc/arch-release ]
	then
		exec pacman -S --needed $missing
	elif	[ -e /etc/debian_version ]
	then
		[ "$hashdrs" ] || missing="$missing libc-dev"
		exec apt-get install $missing
	elif	[ -e /etc/fedora-release ]
	then
		[ "$hashdrs" ] || missing="$missing glibc-devel"
		exec dnf install $missing
	fi
	;;
esac

warn '%s is unsupported by %s.' "$os" "$prog_name"
warn 'suCGI will compile nonetheless, but you need to install:'

inlist = gcc      $missing && warn '    * A C compiler (e.g., gcc or clang)'
inlist = binutils $missing && warn '    * Binary utilits (i.e., ar, ld, as)'
inlist = make     $missing && warn '    * Make'
inlist = m4       $missing && warn '    * M4'

[ "$hashdrs" ] || warn "    * The headers of your system's standard library"

exit 8
