#!/bin/sh

#
# Install a C build toolchain.
#
# suCGI is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# suCGI is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General
# Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License along with suCGI. If not, see <https://www.gnu.org/licenses/>.
#

# shellcheck disable=1091,2015


#
# Initialisation
#

set -Ceu
src_dir="$(dirname "$0")" || exit
readonly src_dir
cd "$src_dir" || exit
. ./scripts/funcs.sh || exit
init


#
# Functions
#

hasall() (
	for __hasall_cmd
	do command -v "$__hasall_cmd" >/dev/null || return
	done
	return 0
)

hasany() (
	for __hasany_cmd
	do command -v "$__hasany_cmd" >/dev/null && return
	done
	return 1
)


#
# Options
#

quiet=
OPTIND=1 OPTARG='' opt=''
while getopts hq opt; do
	case $opt in
	(h) exec cat <<EOF ;;
$prog_name - install a C build toolchain.

Usage:       $prog_name
             $prog_name -h

Options:
    -q       Be quiet.
    -h       Show this help screen.

Copyright 2023 Odin Kroeger.
Released under the GNU General Public License.
This programme comes with ABSOLUTELY NO WARRANTY.
EOF
	(q) quiet=y ;;
	(*) exit 1
	esac
done
shift $((OPTIND - 1))
unset opt

if [ $# -gt 0 ]
then
	printf 'usage: %s\n' "$prog_name" >&2
	exit 2
fi


#
# Main
#

hascomp='' hashdrs=''
for cc in c99 gcc clang tcc cc
do
	if command -v "$cc" >/dev/null
	then
		hascomp=y

		# shellcheck disable=2038
		sed -n '/^[ \t]*#[ \t]*include[ \t]*</p' *.c *.h	|
		grep -Fve'<features.h>' -e'<sys/params.h>'		|
		sort -u							|
		"$cc" -E - >/dev/null 2>&1 && hashdrs=y

		break
	fi
done

missing=
[ "$hascomp" ]			|| missing="$missing gcc"
hasall ar as ld			|| missing="$missing binutils"
hasany make gmake pmake	bsdmake	|| missing="$missing make"
hasany m4			|| missing="$missing m4"

if ! [ "$missing" ] && [ "$hashdrs" ]
then
	if ! [ "$quiet" ]
	then warn 'complete C build toolchain available; nothing to do.'
	fi
	exit 0
fi

os="$(uname)"

case $os in
(Darwin)
	exec xcode-select --install
	;;
(Linux)
	if	[ -e /etc/alpine-release ]
	then
		[ "$hashdrs" ] || missing="$missing libc-dev fortify-headers"
		# shellcheck disable=2086
		exec apk add --interactive $missing
	elif	[ -e /etc/arch-release ]
	then
		# shellcheck disable=2086
		exec pacman -S --needed $missing
	elif	[ -e /etc/debian_version ] || [ -e /etc/devuan_version ]
	then
		[ "$hashdrs" ] || missing="$missing libc-dev"
		# shellcheck disable=2086
		exec apt-get install $missing
	elif	[ -e /etc/fedora-release ]
	then
		[ "$hashdrs" ] || missing="$missing glibc-devel"
		# shellcheck disable=2086
		exec dnf install $missing
	fi
	;;
esac

warn '%s is unsupported by %s.' "$os" "$prog_name"
warn 'suCGI should compile nonetheless, but you need to install:'

# shellcheck disable=2086
inlist '=' gcc      $missing && warn '* A C compiler (e.g., gcc or clang)'
# shellcheck disable=2086
inlist '=' binutils $missing && warn '* The binary utilits (i.e., as and ld)'
# shellcheck disable=2086
inlist '=' make     $missing && warn '* Make'
# shellcheck disable=2086
inlist '=' m4       $missing && warn '* M4'

[ "$hashdrs" ] || warn "* The header files of your system's standard library"

exit 69
