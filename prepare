#!/bin/sh
# shellcheck disable=1091,2015

#
# Initialisation
#

set -Cefu


#
# Options
#

OPTIND=1 OPTARG='' opt=''
while getopts h opt; do
	case $opt in
	(h) exec cat <<EOF ;;
prepare - Prepare the system for building suCGI

Usage:       prepare
             prepare -h

Options:
    -h       Show this help screen.

Copyright 2023 Odin Kroeger.
Released under the GNU General Public License.
This programme comes with ABSOLUTELY NO WARRANTY.
EOF
	(*) exit 1
	esac
done
shift $((OPTIND - 1))
unset opt

if [ $# -gt 0 ]
then
	printf 'usage: prepare\n' >&2
	exit 2
fi


#
# Main
#

case $(uname) in
(Darwin)
	exec xcode-select --install
	;;
(FreeBSD)
	exec cat <<-EOF
	FreeBSD ships with C build tools.
	Nothing to do.
	EOF
	;;
(NetBSD)
	base="https://cdn.NetBSD.org/pub/pkgsrc/packages"
	arch="$(uname -m)" && vers="$(uname -r)" &&
	: "${PKG_PATH:="$base/NetBSD/$arch/$vers/All/"}"
	export PKG_PATH
	exec pkg_add clang binutils
	;;
(Linux)
	[ -e /etc/alpine-release ] &&
		exec apk add binutils fortify-headers gcc libc-dev make m4
	[ -e /etc/arch-release ] &&
		exec pacman -S --needed binutils gcc libtool make m4
	[ -e /etc/debian_version ] &&
		exec apt-get install binutils gcc libc-dev make m4
	[ -e /etc/fedora-release ] &&
		exec dnf install binutils gcc glibc-devel make m4
	;;
esac

cat <<-EOF >&2
$0 does not support your operating system. Please install:
    * A C compiler (e.g., gcc or clang).
    * The header files of your system's standard library.
    * The so-called "binary utilities" (i.e., ar, ld, and as).
    * GNU Make
    * M4
EOF

exit 8
