changequote([, ])dnl
define([default], [ifdef([$1], [ifelse($1, [], [$2], [$1])], [$2])])dnl

.POSIX:

ifdef([__CC], [ifelse(__CC, [], [], [CC = __CC
])], [])dnl
CFLAGS = default([__CFLAGS], [-D_DEFAULT_SOURCE=1 -D_BSD_SOURCE=1 -O2 -s])
ARFLAGS = -r
PREFIX = /usr/local

WWW_GROUP = default([___WWW_GROUP], [www-data])
CGI_BIN = /usr/libexec/cgi-bin

VERSION = 0
PACKAGE = sucgi

TEST_BINS = tests/error tests/env_clear tests/env_get_fname tests/env_restore tests/main tests/file_is_exec tests/file_is_wexcl tests/file_safe_open tests/file_safe_stat tests/path_check_len tests/path_check_wexcl tests/path_contains tests/reraise tests/run_script tests/str_cp tests/str_eq tests/str_split tests/str_vsplit
TESTS = tests/error.sh tests/env_clear tests/env_get_fname.sh tests/env_restore tests/main.sh tests/file_is_exec.sh tests/file_is_wexcl.sh tests/file_safe_open.sh tests/file_safe_stat.sh tests/path_check_len tests/path_check_wexcl.sh tests/path_contains tests/reraise tests/run_script.sh tests/str_cp tests/str_eq tests/str_split tests/str_vsplit

DIST_NAME = $(PACKAGE)-$(VERSION)
DIST_ARCHIVE = $(DIST_NAME).tgz
DIST_FILES = *.c *.h *.in configure configure.env tests/*.c tests/*.h tests/*.sh tests/check tests/data

all: sucgi

env.o: env.c env.h attr.h err.h str.h
	$(CC) -c $(CFLAGS) -o $@ $<

err.o: err.c err.h attr.h
	$(CC) -c $(CFLAGS) -o $@ $<

file.o: file.c file.h attr.h err.h path.h str.h
	$(CC) -c $(CFLAGS) -o $@ $<

path.o: path.c path.h attr.h err.h str.h
	$(CC) -c $(CFLAGS) -o $@ $<

str.o: str.c str.h attr.h err.h
	$(CC) -c $(CFLAGS) -o $@ $<

utils.o: utils.c utils.h attr.h err.h str.h
	$(CC) -c $(CFLAGS) -o $@ $<

sucgi: main.c config.h env.o err.o file.o path.o str.o utils.o
	$(CC) -DTESTING=0 -DPACKAGE=$(PACKAGE) -DVERSION=$(VERSION) $(LDFLAGS) $(CFLAGS) -o $@ $< env.o err.o file.o path.o str.o utils.o $(LDLIBS)

tests/utils.o: tests/utils.c tests/utils.h str.h
	$(CC) -c $(CFLAGS) -o $@ $<

tests/error: tests/error.c err.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $< err.o $(LDLIBS)

tests/env_clear: tests/env_clear.c env.o err.o file.o path.o str.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $< env.o err.o file.o path.o str.o $(LDLIBS)

tests/env_get_fname: tests/env_get_fname.c tests/utils.o env.o err.o file.o path.o str.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $< tests/utils.o env.o err.o file.o path.o str.o $(LDLIBS)

tests/env_restore: tests/env_restore.c tests/utils.o env.o err.o file.o path.o str.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $< tests/utils.o env.o err.o file.o path.o str.o $(LDLIBS)

tests/file_is_exec: tests/file_is_exec.c tests/utils.o file.o str.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $< tests/utils.o file.o str.o $(LDLIBS)

tests/file_is_wexcl: tests/file_is_wexcl.c tests/utils.o file.o str.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $< tests/utils.o file.o str.o $(LDLIBS)

tests/file_safe_open: tests/file_safe_open.c tests/utils.o file.o str.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $< tests/utils.o file.o str.o $(LDLIBS)

tests/file_safe_stat: tests/file_safe_stat.c tests/utils.o file.o str.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $< tests/utils.o file.o str.o $(LDLIBS)

tests/path_check_len: tests/path_check_len.c err.o file.o path.o str.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $< err.o file.o path.o str.o $(LDLIBS)

tests/path_check_wexcl: tests/path_check_wexcl.c tests/utils.o err.o file.o path.o str.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $< tests/utils.o err.o file.o path.o str.o $(LDLIBS)

tests/path_contains: tests/path_contains.c err.o file.o path.o str.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $< err.o file.o path.o str.o $(LDLIBS)

tests/reraise: tests/reraise.c err.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $< err.o $(LDLIBS)

tests/run_script: tests/run_script.c tests/utils.o err.o str.o utils.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $< tests/utils.o err.o str.o utils.o $(LDLIBS)

tests/str_cp: tests/str_cp.c err.o str.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $< err.o str.o $(LDLIBS)

tests/str_eq: tests/str_eq.c err.o str.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $< err.o str.o $(LDLIBS)

tests/str_split: tests/str_split.c err.o str.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $< err.o str.o $(LDLIBS)

tests/str_vsplit: tests/str_vsplit.c err.o str.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $< err.o str.o $(LDLIBS)

tests/main: main.c env.o err.o file.o path.o str.o utils.o
	$(CC) -D INCLUDED_CONFIG=1 -DTESTING=1 -DPACKAGE=fake-$(PACKAGE) -DVERSION=$(VERSION) $(LDFLAGS) $(CFLAGS) -Wno-unused-macros -o $@ $< env.o err.o file.o path.o str.o utils.o $(LDLIBS)

analysis:
	cppcheck -f -q --error-exitcode=8 --enable=all --inconclusive --language=c --std=c99 --library=posix --platform=unix64 --suppress=missingIncludeSystem --inline-suppr -U LOG_PERROR -U O_NOFOLLOW_ANY .
	cppcheck -f -q --error-exitcode=8 --enable=unusedFunction --inconclusive --language=c --std=c99 --library=posix --platform=unix64 --inline-suppr *.c
	flawfinder --error-level=1 -m 0 -D -Q .
	shellcheck configure tests/check tests/*.sh

check: $(TEST_BINS)
	tests/check $(TESTS)

clean:
	find . \( -name '*.o' -o -name '*.tmp' \) -exec rm -f '{}' +
	rm -f sucgi $(DIST_ARCHIVE) $(DIST_ARCHIVE).asc $(TEST_BINS)
	rm -rf $(DIST_NAME)

distclean: clean
	rm config.h makefile

$(DIST_ARCHIVE): $(DIST_FILES)
	mkdir -m u=rwx,go= $(DIST_NAME)
	cp -a $(DIST_FILES) $(DIST_NAME)/
	chmod -R u=rw,go= $(DIST_NAME)/
	tar -czf $(DIST_ARCHIVE) $(DIST_NAME)
	rm -rf $(DIST_NAME)

$(DIST_ARCHIVE).asc: $(DIST_ARCHIVE)
	gpg -qab --batch --yes $(DIST_ARCHIVE)

dist: clean check $(DIST_ARCHIVE) $(DIST_ARCHIVE).asc

install: sucgi
	mkdir -pm 0755 $(DESTDIR)$(PREFIX)/libexec
	cp sucgi $(DESTDIR)$(PREFIX)/libexec
	chown root:$(WWW_GROUP) $(DESTDIR)$(PREFIX)/libexec/sucgi
	chmod u=rws,g=x,o= $(DESTDIR)$(PREFIX)/libexec/sucgi
	ln -s $(DESTDIR)$(PREFIX)/libexec/sucgi $(CGI_BIN)/sucgi

uninstall:
	rm -f $(CGI_BIN)/sucgi $(DESTDIR)$(PREFIX)/libexec/sucgi

.PHONY: all analysis check clean distclean dist install uninstall 

.IGNORE: analysis
