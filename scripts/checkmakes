#!/bin/sh

#
# Check different makes.
#
# Copyright 2023 Odin Kroeger.
#
# This file is part of suCGI.
#
# SuCGI is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# SuCGI is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General
# Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License along with suCGI. If not, see <https://www.gnu.org/licenses/>.
#

# shellcheck disable=2015


#
# Defaults
#

# Shells to test.
makes='bmake bsdmake gmake'

# Be quiet?
quiet=

# Be verbose?
verbose=


#
# Initialiation
#

set -Cefu
scripts_dir="$(cd -P "$(dirname -- "$0")" && pwd)"
src_dir="$(dirname -- "$scripts_dir")"
# shellcheck disable=2034
readonly scripts_dir src_dir
# shellcheck disable=1091
. "$scripts_dir/funcs.sh" || exit
init || exit
tmpdir tmp "$src_dir"


#
# Constants
#

# Current working directory
cwd="$(pwd)" || exit
readonly cwd

# The user who should own logs.
if [ "$(id -u)" -eq 0 ]
then user="$(owner "$src_dir")"
else user="$(id -un)"
fi
readonly user

# The primary group of that user.
group="$(id -gn "$user")"
readonly group


#
# Functions
#

mylogged() {
	: "${cwd:?}"
	: "${user:?}"
	: "${group:?}"
	: "${1:?}"

	case $1 in
	(-*) logged -d"$cwd" -u"$user" -g"$group" "$@" ;;
	(*)  logged -d"$cwd" -u"$user" -g"$group" -- "$@" ;;
	esac
}


#
# Options
#


OPTIND=1 OPTARG='' opt=''
# shellcheck disable=2034
while getopts Dc:hqv opt; do
	# shellcheck disable=2154
	case $opt in
	(h) exec cat <<EOF
$prog_name - run scripts with different shells

Usage:     $prog_name [SH ...]
           $prog_name -h

Operands:
    SH     A shell.

Options:
    -c CC  Use CC as C compiler.
    -q     Be quieter.
    -v     Be verbose, but do not log runs.
    -h     Show this help screen.
EOF
	    ;;
	(D) set -x ;;
	(c) CC="$OPTARG" ;;
	(q) quiet=y ;;
	(v) verbose=y ;;
	(*) exit 1
	esac
done
shift $((OPTIND - 1))
unset opt

# shellcheck disable=2086
[ $# -eq 0 ] && set -- $makes

# Use a fast compiler, if one is available.
if ! [ "${CC-}" ]
then
	for cc in tcc clang
	do
		if command -v "$cc" >/dev/null
		then
			CC="$cc"
			break
		fi
	done
fi
[ "${CC-}" ] && export CC


#
# Main
#

warn -q 'copying sources ...'
cd "$src_dir" || exit
m4 makefile.m4 >"$TMPDIR/makefile"
distdir="$TMPDIR/dist"
make -f "$TMPDIR/makefile" dist_name="$distdir" "$distdir" >/dev/null
cd -P "$distdir" || exit

failures=
for make
do
	command -v "$make" >/dev/null 2>&1 || continue

	warn 'checking %s ... ' "$make"

	m4 makefile.m4 >makefile

	mylogged "$make" distcheck ||
	failures="$failures$make, "
done

if [ "$failures" ]
then err -s70 'failures: %s' "${failures%, }"
else warn -q 'all makes passed.'
fi

