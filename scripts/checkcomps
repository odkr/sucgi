#!/bin/sh
# Run checks using different compilers.
#
# Copyright 2023 Odin Kroeger.
#
# This file is part of suCGI.
#
# suCGI is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option)
# any later version.
#
# suCGI is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License along
# with suCGI. If not, see <https://www.gnu.org/licenses>.

# shellcheck disable=2015


#
# Defaults
#

# Compilers to test.
readonly compilers='
	gcc-12 gcc-11 gcc-10 gcc-9 gcc-8
	gcc12 gcc11 gcc10 gcc9 gcc8
	gcc musl-gcc
	clang-16 clang-15 clang-14 clang-13
	clang-12 clang-11 clang-10 clang-9
	clang16 clang15 clang14 clang13
	clang12 clang11 clang10 clang9
	clang musl-clang
	tcc icx icc c99 cc
'

# Be more quiet?
quiet=

# Be verbose?
verbose=


#
# Initialiation
#

set -Ceu
tools_dir="$(cd -P "$(dirname -- "$0")" && pwd)"
src_dir="$(dirname -- "$tools_dir")"
# shellcheck disable=2034
readonly tools_dir src_dir
# shellcheck disable=1091
. "$tools_dir/funcs.sh" || exit
init || exit
tmpdir


#
# Constants
#

# Default options for icc
# shellcheck disable=2034
readonly icc_flags='-diag-disable=10441 -std=c99 -O2 -s'

# Current working directory
cwd="$(pwd)" || exit
readonly cwd


#
# Functions
#

# make distclean if the makefile exists.
mrproper() {
	if [ -e makefile ]
	then make distclean >/dev/null 2>&1
	fi
}


#
# Options
#

OPTIND=1 OPTARG='' opt=''
# shellcheck disable=2034
while getopts Dhqv opt; do
	# shellcheck disable=2154
	case $opt in
	(h) exec cat <<EOF
$prog_name - run checks using different C compilers

Usage:  $prog_name [CC ...]
        $prog_name -h

Operands:
    CC  A compiler to test.

Options:
    -q  Be more quiet.
    -v  Be verbose, but do not log runs.
    -h  Show this help screen.

Must be called from a directory with a makefile.
The makefile must provide the standard Autoconf targets.
EOF
	    ;;
	(D) set -x ;;
	(q) quiet=y ;;
	(v) verbose=y ;;
	(*) exit 1
	esac
done
shift $((OPTIND - 1))
unset opt

# shellcheck disable=2086
[ $# -eq 0 ] && set -- $compilers


#
# Main
#

cd -P "$src_dir" || exit

warn -q 'copying sources ...'
m4 makefile.m4 >"$TMPDIR/makefile"
distdir="$TMPDIR/dist"
make -f "$TMPDIR/makefile" dist_name="$distdir" "$distdir" >/dev/null
cd -P "$distdir" || exit

failures=
for cc
do
	command -v "$cc" >/dev/null || continue

	warn 'checking with %s ... ' "$cc"

	logfile="$TMPDIR/check$cc.log"
	if ! (
		[ "$verbose" ] || exec >"$logfile" 2>&1

		name="${cc%-*}"
		eval cflags="\${${name}_flags-}"

		mrproper

		for template in *.m4
		do
			case $template in
			('*.m4')   	break ;;
			('macros.m4')	continue ;;
			esac

			# shellcheck disable=2154
			m4 -D__CC="$cc" -D__CFLAGS="$cflags" \
			   "$template" >"${template%.m4}"
		done

		make clean all check ||
		err '%s failed w/o configuartion' "$cc"

		for env in *.env
		do
			case $env in
			('*.env')	break ;;
			('local.env')	continue ;;
			esac

			[ -e makefile ] && make distclean
			CC="$cc" ./configure -fqc"$env"

			make clean all check ||
			err '%s failed w/ configuartion %s' "$cc" "$env"
		done
	)
	then
		if ! [ "$verbose" ]
		then
			warn 'testing with %s failed.' "$cc"
			warn 'see %s for details.' "$logfile"
			[ -e "$logfile" ] && mv "$logfile" "$cwd"
		fi
		failures="$failures $cc"
	fi
done

if [ "$failures" ]
then err -s70 'failures: %s' "${failures# }"
else warn -q 'all compilers passed.'
fi
