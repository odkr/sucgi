#!/bin/sh

#
# Run checks using different compilers.
#
# Copyright 2023 Odin Kroeger.
#
# This file is part of suCGI.
#
# suCGI is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# suCGI is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General
# Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License along with suCGI. If not, see <https://www.gnu.org/licenses/>.
#

# shellcheck disable=2015


#
# Defaults
#

# Compilers to test.
readonly compilers='
	gcc-13 gcc-12 gcc-11 gcc-10 gcc-9 gcc-8 gcc-7 gcc-6
	gcc13 gcc12 gcc11 gcc10 gcc9 gcc8 gcc7 gcc6
	gcc musl-gcc
	clang-18 clang-17 clang-16 clang-15 clang-14
	clang-13 clang-12 clang-11 clang-10 clang-9
	clang18 clang17 clang16 clang15 clang14
	clang13 clang12 clang11 clang10 clang9
	clang musl-clang
	tcc
	icc-2023.2 icc-2022.2 icc
	c99 cc
'

# Be quieter?
quiet=

# Be verbose?
verbose=


#
# Initialiation
#

set -Ceu
scripts_dir="$(cd -P "$(dirname -- "$0")" && pwd)"
src_dir="$(dirname -- "$scripts_dir")"
# shellcheck disable=2034
readonly scripts_dir src_dir
# shellcheck disable=1091
. "$scripts_dir/funcs.sh" || exit
init || exit
tmpdir tmp "$src_dir"


#
# Constants
#

# Default options for icc.
# shellcheck disable=2034
readonly icc_flags='-diag-disable=161,10441 -std=c99 -O2 -s'

# Current working directory
cwd="$(pwd)" || exit
readonly cwd

# The user who should own logs.
if [ "$(id -u)" -eq 0 ]
then user="$(owner "$src_dir")"
else user="$(id -un)"
fi
readonly user

# The primary group of that user.
group="$(id -gn "$user")"
readonly group


#
# Functions
#

mylogged() {
	: "${cwd:?}"
	: "${user:?}"
	: "${group:?}"
	: "${1:?}"

	case $1 in
	(-*) logged -d"$cwd" -u"$user" -g"$group" "$@" ;;
	(*)  logged -d"$cwd" -u"$user" -g"$group" -- "$@" ;;
	esac
}


#
# Options
#

OPTIND=1 OPTARG='' opt=''
# shellcheck disable=2034
while getopts Dhqv opt; do
	# shellcheck disable=2154
	case $opt in
	(h) exec cat <<EOF
$prog_name - run checks using different C compilers

Usage:  $prog_name [CC ...]
        $prog_name -h

Operands:
    CC  A compiler to test.

Options:
    -q  Be quieter.
    -v  Be verbose, but do not log runs.
    -h  Show this help screen.
EOF
	    ;;
	(D) set -x ;;
	(q) quiet=y ;;
	(v) verbose=y ;;
	(*) exit 1
	esac
done
shift $((OPTIND - 1))
unset opt

# shellcheck disable=2086
[ $# -eq 0 ] && set -- $compilers


#
# Main
#

warn -q 'copying sources ...'
cd "$src_dir" || exit
m4 ./makefile.m4 >"$TMPDIR/makefile"
distdir="$TMPDIR/dist"
mylogged make -f "$TMPDIR/makefile" dist_name="$distdir" "$distdir"
cd "$distdir" || exit

n=0 failures=
for cc
do
	absfname="$(command -v "$cc" 2>/dev/null)" || continue

	if [ "$cc" != c99 ]
	then
		i=0
		while [ "$i" -lt "$n" ]
		do
			eval seenabs="\${absfname_$i}" seencc="\${cc_$i}"
			if cmp "${absfname:?}" "${seenabs:?}" >/dev/null 2>&1
			then
				# shellcheck disable=2154
				warn '%s has already been checked as %s.' \
				     "$cc" "$seencc"
				continue 2
			fi
			i=$((i + 1))
		done

		eval "absfname_$n"='$absfname' "cc_$n"='$cc'
		n=$((n + 1))
	fi

	warn 'checking with %s ... ' "$cc"

	[ -e makefile ] && mylogged make distclean
	[ -e makefile ] && rm -f makefile

	eval "cflags=\${${cc%%[!a-z]*}_flags-}"
	# shellcheck disable=2154
	m4 -D__CC="$cc" -D__CFLAGS="$cflags" makefile.m4 >makefile

	mylogged -l"$cc.log" make clean all check ||
	failures="$failures$cc (w/o configuration), "

	for env in *.env
	do
		case $env in
		('*.env')	break ;;
		('local.env')	continue ;;
		esac

		[ -e makefile ] && mylogged make distclean
		CC="$cc" mylogged ./configure -fqc"$env"

		mylogged -l"$cc.log" make clean all check ||
		failures="$failures$cc (w/ $env), "
	done
done

if [ "$failures" ]
then err -s70 'failures: %s' "${failures%, }"
else warn -q 'all compilers passed.'
fi
