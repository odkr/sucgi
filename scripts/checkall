#!/bin/sh

#
# Run shell and compiler checks.
#
# Copyright 2022 Odin Kroeger.
#
# This file is part of suCGI.
#
# SuCGI is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# SuCGI is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General
# Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License along with suCGI. If not, see <https://www.gnu.org/licenses/>.
#

# shellcheck disable=2015

#
# Defaults
#

# Shells to test.
readonly shells='sh bash dash ksh mksh oksh posh sash yash zsh'

# Arguments for check*.
args=

# Be quieter?
quiet=

# Be verbose?
verbose=


#
# Initialiation
#

set -Cefu
scripts_dir="$(cd -P "$(dirname -- "$0")" && pwd)"
src_dir="$(dirname -- "$scripts_dir")"
# shellcheck disable=2034
readonly scripts_dir src_dir
# shellcheck disable=1091
. "$scripts_dir/funcs.sh" || exit
init || exit
tmpdir tmp "$src_dir"


#
# Options
#

OPTIND=1 OPTARG='' opt=''
# shellcheck disable=2034
while getopts Dhqv opt; do
	# shellcheck disable=2154
	case $opt in
	(h) exec cat <<EOF
$prog_name - run shell and compiler checks

Usage:  $prog_name [-D] [-v]
        $prog_name -h

Options:
    -D  Show debugging information.
    -q  Be quieter.
    -v  Be verbose, but do not log runs.
    -h  Show this help screen.
EOF
	    ;;
	(D) args="$args -D" ;;
	(q) args="$args -q" quiet=y ;;
	(v) args="$args -v" verbose=y ;;
	(*) exit 1
	esac
done
shift $((OPTIND - 1))
unset opt

# shellcheck disable=2086
[ $# -eq 0 ] && set -- $shells


#
# Main
#

failures=

[ "$verbose" ] || warn 'checking compilers ...'
# shellcheck disable=2086
logged "$src_dir/scripts/checkcomps" $args || failures=compilers

[ "$verbose" ] || warn 'checking makes ...'
# shellcheck disable=2086
logged "$src_dir/scripts/checkmakes" $args || failures="$failures, makes"

[ "$verbose" ] || warn 'checking shells ...'
# shellcheck disable=2086
logged "$src_dir/scripts/checkshells" $args || failures="$failures, shells"

if [ "$failures" ]
then err "failures: %s" "${failures#, }"
else warn -q 'all checks passed.'
fi
