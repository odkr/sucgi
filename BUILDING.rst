==============
Building suCGI
==============

Configuration
=============

Use *configure* to Generate *makefile* and *config.h*.

If you want to adapt suCGI's build settings, edit *configure.env* and create
a (new) makefile by calling ``configure``; supply ``-f`` to overwrite existing
files (e.g., ``CC=/opt/obscure/bin/occ ./configure -f``).

*configure* also respects the following environment variables:

CC
    The C compiler.

CFLAGS
    Flags to give to the compiler.

PROJECTDIR
    Top-level directory of the repository
    (defaults to the directory that *configure* is in).


Compilation
===========

Compile suCGI by calling ``make``.

Makefile variables
------------------

You can pass the following variables to ``make`` to configure compilation:

CC
    The C compiler
    (default is generated by ``configure``).

CFLAGS
    Flags to give to the C compiler
    (default is generated by ``configure``).

LDFLAGS
    Flags to give to the compiler when it invokes the linker
    (default depends on *make*).

LDLIBS
    Flags or names to give to the compiler when it invokes the linker
    (default depends on *make*).

PROJECTDIR
    Top-level directory of the repository
    (defaults to the directory that *configure* is in).

SRCDIR
    Location of the source files
    (defaults to ``$(PROJECTDIR)/src``).

BUILDDIR
    Directory to place built files in
    (defaults to *build* in the current working directory).

Filenames must *not* comprise whitespace or magic characters!


Macros
------

The following macros govern compilation:

TESTING
    Whether to build for testing. Boolean value.
    Test builds are insecure!


Installation
============

Install suCGI by ``make install``.

You can pass the following variables to ``make`` to adapt the installation:

DESTDIR
    Prefix for staged installations
    (default depends on *make*).

PREFIX
    Prefix for installation targets
    (defaults to */usr/local*).

CGIBIN
    Path to your webserver's */cgi-bin* directory
    (defaults to */usr/lib/cgi-bin*).

WWWGRP
    Group the webserver runs as
    (defaults to "www-data").

Filenames must *not* comprise whitespace or magic characters!


Other targets
=============

The *makefile* supports the following 'phony' targets:

all
    Synonym for "sucgi" and the default target.

analysis
    Analyse the code with cppcheck and flawfinder,
    if they are installed.

check
    Perform tests. Must be run as the superuser to perform all tests.

cov
    Store a human-readable coverage report to *cov/html/index.html*.
    Must be run as the superuser in order to be accurate.

clean
    Delete binaries, coverage reports, temporary files, and distribution files.

dist
    Make a distribution package.

distcheck
    Check if the distribution compiles,
    passes the test suite, and is self-contained.

distclean
    Delete *config.h*, *makefile* and everything ``make clean`` deletes.

lcov.info
    Store a machine-readable coverage report to *lcov.info*.
    Must be run as the superuser in order to be accurate.

install
    Install suCGI.

uninstall
    Uninstall suCGI.
