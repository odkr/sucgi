|build|
|codacy|


=====
suCGI
=====

Run CGI programmes under the UID and GID of their owner.

suCGI checks if the programme pointed to by the environment variable
*PATH_TRANSLATED* is secure, sets the process' effective UID and GID 
to the UID and the GID of that programme's owner, cleans up the
environment, and then runs the programme.


Requirements
============

A GNU/Linux system running a kernel ≥ v5.6 or macOS ≥ v11.

More precisely:

* Linux ≥ v5.6 or Apple XNU ≥ v7195.50.7.100.1.
* A C99 compiler that complies with `POSIX.1-2008`_;
  e.g., gcc_ ≥ v5.1, clang_ ≥ v3.5, or tcc_ ≥ v0.9.
* A C standard library that complies with POSIX.1-2008 and 4.2BSD;
  e.g., glibc_ ≥ v2.1.3 or Apple's Libc.
* The standard system utilities POSIX.1-2008 mandates.

Save for a kernel ≥ v5.6 or macOS ≥ v11, any post-2015 GNU/Linux or
macOS system should meet those requirements. You may need to install
the standard build tools, however.

Arch-based GNU/Linux systems::

    pacman -S base-devel

Debian-based GNU/Linux systems::

    apt-get install build-essential m4

RedHat-based GNU/Linux systems::

    dnf group install "C Development Tools and Libraries" "Development Tools"
    dnf install m4

macOS::

    xcode-select --install


Installation 
============

**Do NOT use suCGI at this point!**

**You use suCGI at your own risk!**

----

Download the repository and unpack it.

Please take the time to read and evaluate the source code.

----

Generate the makefile by::

    ./configure

If ``configure`` succeeded and inferred the right settings,
move on to the next step.

Otherwise, generate *config.h* by ``m4 config.h.in >config.h`` and *makefile*,
depending on your operating system, by ``m4 -D__CFLAGS='-D_DEFAULT_SOURCE=1
-D_BSD_SOURCE=1 -DHAVE_OPENAT2=1 -DHAVE_SYSCALL=1 -O2 -s' makefile.in
>makefile`` on GNU/Linux or ``m4 makefile.in >makefile`` on macOS.
Alternatively, configure the build yourself (see "Building suCGI" below).

----

Adapt *config.h* to your needs.
Most importantly, adapt *DOC_ROOT*, *MIN_UID* and *MAX_UID*.
suCGI is configured at compile-time, you cannot do this later.

----

Compile and install suCGI by::

    make
    make install

You can uninstall suCGI by ``make uninstall``.


Building suCGI
==============

Configuration
-------------

Use *configure* to create *makefile* and *config.h*.

If you want to adapt suCGI's build settings, edit *configure.env* and create
a (new) makefile by calling ``configure``; supply ``-f`` to overwrite existing
files (e.g., ``CC=/opt/obscure/bin/occ ./configure -f``).

*configure* also respects the following environment variables:

CC
    The C compiler.

CFLAGS
    Flags to give to the compiler.

WWW_GROUP
    Group the webserver runs as.


Compilation
-----------

Compile suCGI by calling ``make``.

You can pass any of the following variables to ``make`` to adapt
the build process or the installation:

CC
    The C compiler
    (default is generated by ``configure``).

CFLAGS
    Flags to give to the C compiler
    (default is generated by ``configure``).

LDFLAGS
    Flags to give to the compiler when it invokes the linker
    (default depends on *make*).

LDLIBS
    Flags or names to give to the compiler when it invokes the linker
    (default depends on *make*).

DESTDIR
    Prefix for staged installations
    (default depends on *make*).

PREFIX
    Prefix for installation targets
    (defaults to */usr/local*).

CGI_BIN
    Path to your webserver's */cgi-bin* directory
    (defaults to */usr/lib/cgi-bin*).

WWW_GROUP
    Group the webserver runs as
    (defaults to "www-data").

The following macros govern compilation:

HAVE_OPENAT2
    Whether the *linux/openat2.h* header is available. Boolean value.

HAVE_SYSCALL
    Whether the *sys/syscall.h* header is available. Boolean value.

TESTING
    Whether to build a binary for testing. Boolean value.
    Disables security checks the test suite does not pass.


Other *makefile* targets
------------------------

The *makefile* supports the following 'phony' targets:

all
    Synonym for "sucgi" and the default target.

analysis
    Analyse the code with cppcheck and flawfinder,
    if they are installed.

check
    Perform tests. Must be run as the superuser to perform all tests.

clean
    Delete the compiled files.

distclean
    Delete the compiled files, *config.h*, and the *makefile*.

dist
    Make a distribution package.

install
    Install suCGI.

uninstall
    Uninstall suCGI.



Documentation
=============

See the source code for more details.


Contact
=======

If there's something wrong with suCGI, please
`open an issue <https://github.com/odkr/sucgi/issues>`_.


License
=======

Copyright 2022 Odin Kroeger

suCGI is free software: you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation, either version 3 of the License, or (at your option)
any later version.

suCGI is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
A PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with suCGI. If not, see <https://www.gnu.org/licenses/>. 


Further Information
===================

GitHub: https://github.com/odkr/sucgi


.. _clang: https://clang.llvm.org/

.. _gcc: https://gcc.gnu.org/

.. _glibc: https://www.gnu.org/software/libc/

.. _tcc: https://bellard.org/tcc/

.. _XNU: https://github.com/apple-oss-distributions/xnu/

.. _`POSIX.1-2008`: https://pubs.opengroup.org/onlinepubs/9699919799.2008edition/

.. |build|  image:: https://ci.appveyor.com/api/projects/status/m9y70tfy2g4ey31n/branch/main?svg=true
            :target: https://ci.appveyor.com/project/odkr/sucgi

.. |codacy| image:: https://app.codacy.com/project/badge/Grade/cb67a3bad615449589dfb242876600ac
            :target: https://www.codacy.com/gh/odkr/sucgi/dashboard?utm_source=github.com&amp;utm_content=odkr/sucgi
