# suCGI build configuration.
# See README.md for details.

#
# Compiler flags
#

# Use "add_macros NAME=VALUE [NAME=VALUE [...]]" to add "-DNAME=VALUE".
# Use "add_cflags FLAG [FLAG [...]]" to add other compiler flags.

# Use ISO/IEC 9899:1999 ("C99").
add_macros _ISOC99_SOURCE=1
add_cflags -std=c99

# Use default definitions (for GCC).
add_macros _DEFAULT_SOURCE=1 _BSD_SOURCE=1

# Add code to check for buffer overflows.
# This should be superfluous, but better be safe than sorry.
add_macros _FORTIFY_SOURCE=3

# Enable control flow protection.
add_cflags -fcf-protection=full -fsanitize=cfi

# Enable link time optimisation.
# Required for -fsanitize=cfi by clang, but a good idea at any rate.
add_cflags -flto

# Enable the stack protector.
add_cflags -fstack-protector -fsanitize=safe-stack

# Protect against stack clashing attacks.
add_cflags -fstack-clash-protection

# Enable the undefined behaviour sanitiser.
add_cflags -fsanitize=undefined -fsanitize-undefined-trap-on-error

# Fail on integer overflow.
add_cflags -ftrapv

# Enable most warnings.
add_cflags -pedantic-errors -Wpedantic -Wall -Wextra

# Enable some of the warnings not covered by -Wall and -Wextra.
add_cflags -Wcast-align=strict -Wconversion \
           -Wformat=1 -Wformat-overflow=2 -Wformat-signedness \
           -Wimplicit-fallthrough=3 -Wlogical-op \
	   -Wnull-dereference -Wparentheses \
	   -Wshadow -Wundef -Wuninitialized -Wunused-macros

# Disable useless warnings enabled by -Wall -Wextra.
add_cflags -Wno-unused-command-line-argument -Wno-unknown-attributes

# Optimise the build.
add_cflags -O2 -s

#
# Non-POSIX headers
#

# Use "check_header MACRO HEADER" to set -DMACRO=1 if HEADER is available. 

# Check if openat2 is available.
check_header HAVE_OPENAT2 linux/openat2.h
check_header HAVE_SYSCALL sys/syscall.h
